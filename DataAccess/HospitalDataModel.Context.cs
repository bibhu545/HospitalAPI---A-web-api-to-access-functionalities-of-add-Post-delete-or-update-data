//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class assignmentEntities : DbContext
    {
        public assignmentEntities()
            : base("name=assignmentEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<doctors> doctors { get; set; }
        public virtual DbSet<documents> documents { get; set; }
        public virtual DbSet<health_users> health_users { get; set; }
        public virtual DbSet<hospitals> hospitals { get; set; }
        public virtual DbSet<recordtypes> recordtypes { get; set; }
        public virtual DbSet<speciality> speciality { get; set; }
        public virtual DbSet<users> users { get; set; }
    
        public virtual int ActivateUser(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActivateUser", emailParameter);
        }
    
        public virtual int AddHospital(Nullable<int> userid, string hospitalname, string address, string phone1, string phone2, string email, Nullable<int> isprimary)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var hospitalnameParameter = hospitalname != null ?
                new ObjectParameter("hospitalname", hospitalname) :
                new ObjectParameter("hospitalname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var isprimaryParameter = isprimary.HasValue ?
                new ObjectParameter("isprimary", isprimary) :
                new ObjectParameter("isprimary", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddHospital", useridParameter, hospitalnameParameter, addressParameter, phone1Parameter, phone2Parameter, emailParameter, isprimaryParameter);
        }
    
        public virtual int AddNewUser(string username, string firstname, string lastname, string address, string phone)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNewUser", usernameParameter, firstnameParameter, lastnameParameter, addressParameter, phoneParameter);
        }
    
        public virtual int ChangePassword(Nullable<int> userid, string password)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangePassword", useridParameter, passwordParameter);
        }
    
        public virtual int CreateDoctors(Nullable<int> userid, Nullable<int> hospitalid, string firstname, string lastname, Nullable<int> speciality, string address, string phone1, string phone2, string email, Nullable<int> isprimary)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var hospitalidParameter = hospitalid.HasValue ?
                new ObjectParameter("hospitalid", hospitalid) :
                new ObjectParameter("hospitalid", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var specialityParameter = speciality.HasValue ?
                new ObjectParameter("speciality", speciality) :
                new ObjectParameter("speciality", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var isprimaryParameter = isprimary.HasValue ?
                new ObjectParameter("isprimary", isprimary) :
                new ObjectParameter("isprimary", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateDoctors", useridParameter, hospitalidParameter, firstnameParameter, lastnameParameter, specialityParameter, addressParameter, phone1Parameter, phone2Parameter, emailParameter, isprimaryParameter);
        }
    
        public virtual int CreateNewUser(string firstname, string lastname, string email, string password)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateNewUser", firstnameParameter, lastnameParameter, emailParameter, passwordParameter);
        }
    
        public virtual int CreateNewUserWithCode(string firstname, string lastname, string email, string password, string activationlink)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var activationlinkParameter = activationlink != null ?
                new ObjectParameter("activationlink", activationlink) :
                new ObjectParameter("activationlink", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateNewUserWithCode", firstnameParameter, lastnameParameter, emailParameter, passwordParameter, activationlinkParameter);
        }
    
        public virtual int DeleteDocument(Nullable<int> documentid)
        {
            var documentidParameter = documentid.HasValue ?
                new ObjectParameter("documentid", documentid) :
                new ObjectParameter("documentid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDocument", documentidParameter);
        }
    
        public virtual int DeleteHospital(Nullable<int> hospitalid)
        {
            var hospitalidParameter = hospitalid.HasValue ?
                new ObjectParameter("hospitalid", hospitalid) :
                new ObjectParameter("hospitalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteHospital", hospitalidParameter);
        }
    
        public virtual ObjectResult<GetAllDoctors_Result> GetAllDoctors(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDoctors_Result>("GetAllDoctors", useridParameter);
        }
    
        public virtual ObjectResult<GetDoctorDetails_Result> GetDoctorDetails(Nullable<int> doctorid)
        {
            var doctoridParameter = doctorid.HasValue ?
                new ObjectParameter("doctorid", doctorid) :
                new ObjectParameter("doctorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDoctorDetails_Result>("GetDoctorDetails", doctoridParameter);
        }
    
        public virtual ObjectResult<GetDoctorDetailsV2_Result> GetDoctorDetailsV2(Nullable<int> doctorid, Nullable<int> userid)
        {
            var doctoridParameter = doctorid.HasValue ?
                new ObjectParameter("doctorid", doctorid) :
                new ObjectParameter("doctorid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDoctorDetailsV2_Result>("GetDoctorDetailsV2", doctoridParameter, useridParameter);
        }
    
        public virtual ObjectResult<GetFilesFromDB_Result> GetFilesFromDB(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFilesFromDB_Result>("GetFilesFromDB", useridParameter);
        }
    
        public virtual ObjectResult<GetFilesFromDBV2_Result> GetFilesFromDBV2(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFilesFromDBV2_Result>("GetFilesFromDBV2", useridParameter);
        }
    
        public virtual ObjectResult<GetFormattedFilesFromDBV2_Result> GetFormattedFilesFromDBV2(Nullable<int> userid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFormattedFilesFromDBV2_Result>("GetFormattedFilesFromDBV2", useridParameter, startdateParameter, enddateParameter);
        }
    
        public virtual int UpdateDoctor(Nullable<int> doctorid, Nullable<int> userid, Nullable<int> hospitalid, string firstname, string lastname, Nullable<int> speciality, string address, string phone1, string phone2, string email, Nullable<int> isprimary)
        {
            var doctoridParameter = doctorid.HasValue ?
                new ObjectParameter("doctorid", doctorid) :
                new ObjectParameter("doctorid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var hospitalidParameter = hospitalid.HasValue ?
                new ObjectParameter("hospitalid", hospitalid) :
                new ObjectParameter("hospitalid", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var specialityParameter = speciality.HasValue ?
                new ObjectParameter("speciality", speciality) :
                new ObjectParameter("speciality", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var isprimaryParameter = isprimary.HasValue ?
                new ObjectParameter("isprimary", isprimary) :
                new ObjectParameter("isprimary", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDoctor", doctoridParameter, useridParameter, hospitalidParameter, firstnameParameter, lastnameParameter, specialityParameter, addressParameter, phone1Parameter, phone2Parameter, emailParameter, isprimaryParameter);
        }
    
        public virtual int UpdateHospital(Nullable<int> hospitalid, Nullable<int> userid, string hospitalname, string address, string phone1, string phone2, string email, Nullable<int> isprimary)
        {
            var hospitalidParameter = hospitalid.HasValue ?
                new ObjectParameter("hospitalid", hospitalid) :
                new ObjectParameter("hospitalid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var hospitalnameParameter = hospitalname != null ?
                new ObjectParameter("hospitalname", hospitalname) :
                new ObjectParameter("hospitalname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var isprimaryParameter = isprimary.HasValue ?
                new ObjectParameter("isprimary", isprimary) :
                new ObjectParameter("isprimary", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateHospital", hospitalidParameter, useridParameter, hospitalnameParameter, addressParameter, phone1Parameter, phone2Parameter, emailParameter, isprimaryParameter);
        }
    
        public virtual int UpdateUser(Nullable<int> userid, string username, string firstname, string lastname, string address, string phone)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", useridParameter, usernameParameter, firstnameParameter, lastnameParameter, addressParameter, phoneParameter);
        }
    
        public virtual int UpdateUserDetails(Nullable<int> userid, string firstname, string lastname, string email, string phone, string address, string profile)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var profileParameter = profile != null ?
                new ObjectParameter("profile", profile) :
                new ObjectParameter("profile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserDetails", useridParameter, firstnameParameter, lastnameParameter, emailParameter, phoneParameter, addressParameter, profileParameter);
        }
    }
}
